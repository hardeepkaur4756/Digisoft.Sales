@model IEnumerable<Digisoft.Sales.Models.JobViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
    <div class="row">
        <div class="col-sm-4">
            <input type="text" class="form-control" id="startDate" autocomplete="off" placeholder="Select Start Date" />
        </div>
        <div class="col-sm-4">
            <input type="text" class="form-control" id="endDate" autocomplete="off" placeholder="Select End Date" />
        </div>
        <div class="col-sm-1">
            <input type="button" id="" class="btn btn-primary" value="Clear" data-isNew="true" onclick="clearFilters(this)" />
        </div>
    </div>
    <input type="button" id="btnAdd" class="btn btn-primary common-btn" value="Add" data-isNew="true" onclick="AddOrEdit(this)" />
<table class="table table-responsive table-hover display" style="width:100%;" id="MyTable">
    <thead class="thead-dark">
        <tr>
            @*<th>Title</th>*@
            <th>Client</th>
            <th>Developer</th>
            <th>Price</th>
            <th>Hired On</th>
            <th>Applied Under</th>
            <th>Bidding</th>
            <th>Platform</th>
            <th>Project Type</th>
            <th>Team Lead</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

@section scripts {
    <script>
        $(document).ready(function () {

            //date pickers
            var isFirstTime = true;
            var startDate = new Date();
            var FromEndDate = new Date();

            $("#startDate").datepicker({
                autoclose: true,
                minViewMode: 0,
                //format: "dd/mm/yyyy"
                format: "yyyy-mm-dd"
            }).on('changeDate', function (selected) {
                startDate = new Date(selected.date.valueOf());
                startDate.setDate(startDate.getDate(new Date(selected.date.valueOf())));
                $('#endDate').datepicker('setStartDate', startDate);
                var edate = $('#endDate').val()
                if (edate == undefined || edate == "") {
                    $("#endDate").addClass("error");
                    $("#endDate").val("");
                    return false;
                } else {
                    $("#endDate").removeClass("error");
                    _loadData();
                    isFirstTime = false;
                }
            });
            //$("#startDate").val(untilHelper.GetCurrentDateMonthYearFormat);

            $("#endDate").datepicker({
                autoclose: true,
                minViewMode: 0,
                //format: 'dd/mm/yyyy'
                format: "yyyy-mm-dd"
            }).on('changeDate', function (selected) {
                var sdate = $('#startDate').val()
                if (sdate == undefined || sdate == "") {
                    $("#startDate").addClass("error");
                    $("#endDate").val("");
                    return false;
                } else {
                    $("#endDate").removeClass("error");
                    $("#startDate").removeClass("error");
                    FromEndDate = new Date(selected.date.valueOf());
                    FromEndDate.setDate(FromEndDate.getDate(new Date(selected.date.valueOf())));
                    $('#startDate').datepicker('setEndDate', FromEndDate);
                    _loadData();
                    isFirstTime = false;
                }
            });
        //$("#endDate").val(untilHelper.GetCurrentDateMonthYearFormat);
           
            loader();
            if (isFirstTime) {
                _loadData();
            }
            removeLoader();
        });
        var oTable;
        var _loadData = function (response) {
            if ($.fn.DataTable.isDataTable("#MyTable")) {
                oTable.draw();
            }
            else {

                oTable = $('#MyTable').DataTable({
                    //"aaData":response,
                    "bServerSide": true,
                    "sAjaxSource": "/Job/GetList",
                    "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                        var colName = oSettings.aoColumns[oSettings.aaSorting[0][0]].mData;
                        var sDir = oSettings.aaSorting[0][1];
                        var sDate = $("#startDate").val();
                        var eDate = $("#endDate").val();

                        aoData.push({ "name": "sortCol", "value": colName });
                        aoData.push({ "name": "sortDir", "value": sDir });
                        aoData.push({ "name": "startDate", "value": sDate });
                        aoData.push({ "name": "endDate", "value": eDate });

                        $.ajax({
                            type: "Get",
                            data: aoData,
                            url: sSource,
                            success: fnCallback
                        })
                    },
                    "aoColumns": [
                        //{ "mData": "Title"},
                        { "mData": "ClientName" },
                        { "mData": "DeveloperName" },
                        { "mData": "Price" },
                        {
                            "mData": "HiredOn",
                            "render": function (row, type, full) {
                                var date = new Date(parseInt(full.HiredOn.substr(6)));
                                var month = date.getMonth() + 1;
                                var formattedDate = date.getDate() + "/" + month + "/" + date.getFullYear();
                                return formattedDate;
                            }
                        },
                        { "mData": "AppliedUnderName" },
                        { "mData": "BiddingTitle" },
                        { "mData": "PlatformName" },
                        { "mData": "ProjectTypeName" },
                        { "mData": "TeamLeadName" },
                        {
                            "mData": null,
                            "render": function (row, type, full) {
                                var buttons;
                                if (full.IsAdmin) {
                                    buttons = "<a class='icon-style' href='#' id='' data-id='" + full.Id + "' onclick='return ViewDetail(this)'><i class='fa fa-info-circle' aria-hidden='true'></i></a>";
                                    return "<a class='icon-style' href='#' id='' data-id='" + full.Id + "' onclick='return AddOrEdit(this)'><i class='fa fa-pencil' aria-hidden='true'></i> </a><a class='icon-style' href='#' id='' data-id='" + full.Id + "' onclick='return Delete(this)'><i class='fa fa-trash' aria-hidden='true'></i></a>" + buttons;
                                }
                                else {
                                    buttons = "<a class='icon-style' href='#' id='' data-id='" + full.Id + "' onclick='return ViewDetail(this)'><i class='fa fa-info-circle' aria-hidden='true'></i></a>";
                                    if (full.IsCurrentUser) {
                                        return "<a class='icon-style' href='#' id='' data-id='" + full.Id + "' onclick='return AddOrEdit(this)'><i class='fa fa-pencil' aria-hidden='true'></i> </a><a class='icon-style' href='#' id='' data-id='" + full.Id + "' onclick='return Delete(this)'><i class='fa fa-trash' aria-hidden='true'></i></a>" + buttons;
                                    } else {
                                        return buttons;
                                    }
                                }
                                return buttons;
                            },
                        },
                    ],
                    "aoColumnDefs": [
                        { "bSortable": false, "aTargets": [9] }
                    ],
                    "order": [[3, "desc"]],
                    bProcessing: true,
                    pageLength: 10,
                    "paging": true,
                    bSearching: false,
                    bLengthChange: false,
                    "language": {
                        "zeroRecords": "Not found - Sorry",
                        "info": "Page _PAGE_ of _PAGES_",
                        "infoEmpty": "No records",
                        "processing": "Processing... Please wait",
                    },
                });
            }
            removeLoader();
        };

        var clearFilters = function () {
            $("#startDate").val("");
            $("#endDate").val("");
            _loadData();
        }
        var AddOrEdit = function (event) {
            var isNew = event.getAttribute("data-isNew");
            var Id = parseInt(event.getAttribute("data-Id"));
            if (Id == null || Id == undefined) {
                notificationHelper.ShowError("Some thing went wrong!");
            }
            else {
                loader();
                if (isNew) {
                    Id = 0;
                }
                $.ajax({
                    type: "Get",
                    url: "/Job/AddJob",
                    data: { id: Id },
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        if (response.Success) {
                            if (Id > 0) {
                                $('#myModal').find('#myModalLabel').html('Update Job');
                            }
                            else {
                                $('#myModal').find('#myModalLabel').html('Add Job');
                            }
                            $("#btnSave").css("display", "inline-block");
                            $('#myModal').find('.modal-body').html(response.Html);
                            $('#myModal').find('.btn-primary').addClass('saveBid');
                            $('#myModal').modal('show');
                            removeLoader();
                        }
                        else {
                            notificationHelper.ShowError("Some thing went wrong !");
                            removeLoader();
                        }
                    },
                    error: function (result) {
                        notificationHelper.ShowError(result.Message);
                        removeLoader();
                    }
                });
            }
        }

        var ViewDetail = function (event) {
            var Id = parseInt(event.getAttribute("data-Id"));
            if (Id == null || Id == undefined) {
                notificationHelper.ShowError("Some thing went wrong!");
            }
            else {
                loader();
                $.ajax({
                    type: "Get",
                    url: "/Job/AddJob",
                    data: { id: Id, "viewType": "Display" },
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        if (response.Success) {
                            if (Id > 0) {
                                $('#myModal').find('#myModalLabel').html('Job View Details');
                            }
                            else {
                                $('#myModal').find('#myModalLabel').html('Job View Details');
                            }
                            $("#btnSave").css("display", "inline-block");
                            $('#myModal').find('.modal-body').html(response.Html);
                            $('#myModal').find('.btn-primary').addClass('saveBid');
                            $('#myModal').modal('show');
                            removeLoader();
                        }
                        else {
                            notificationHelper.ShowError("Some thing went wrong !");
                            removeLoader();
                        }
                    },
                    error: function (result) {
                        notificationHelper.ShowError(result.Message);
                        removeLoader();
                    }
                });
            }
        }




        var Delete = function (event) {
            var Id = parseInt(event.getAttribute("data-Id"));
            if (Id == null || Id == undefined) {
                notificationHelper.ShowError("Some thing went wrong!");
            }
            else {
                if (confirm("Are you sure?")) {
                    loader();
                    $.ajax({
                        type: "Get",
                        url: "/Job/Delete",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: { Id: Id },
                        success: function (result) {
                            if (result.Success) {
                                notificationHelper.ShowSuccess(result.Message);
                                setTimeout(function () {
                                    location.href = "/Job/Index";
                                }, 1000);
                                removeLoader();
                            }
                            else {
                                notificationHelper.ShowError(result.Message);
                                removeLoader();
                            }
                        },
                        error: function (result) {
                            notificationHelper.ShowError('error');
                            removeLoader();
                        }
                    });
                }
                return false;
            }
        }
    </script>
}

