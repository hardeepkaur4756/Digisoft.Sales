@model Digisoft.Sales.Models.BillingViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.css" />
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.jquery.min.js"></script>
<style>
    .chosen-container-multi .chosen-choices {
        display: block;
        width: 100%;
        height: calc(1.5em + 0.75rem + 2px);
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #6e707e;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #d1d3e2;
        border-radius: 0.35rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        background-image: none;
    }

    .chosen-container-active .chosen-choices li.search-field input[type="text"] {
        color: #6e707e !important;
    }
</style>


<h4 class="panel-title">
    Filters
</h4>
<div class="row">
    <div class="col-sm-3">
        <input type="text" class="form-control" id="startDate" autocomplete="off" placeholder="Select Start Date" />
    </div>
    <div class="col-sm-3">
        <input type="text" class="form-control" id="endDate" autocomplete="off" placeholder="Select End Date" />
    </div>
    <div class="col-sm-5">
        @Html.DropDownListFor(x => Model.ClientsIds, new SelectList(Model.Clients, "Value", "Text", ""), htmlAttributes: new { @data_placeholder = "Select Clients...", @class = "form-control chosen", @id = "ddlClients", multiple = "true" })
    </div>
    <div class="col-sm-1">
        <input type="button" id="" class="btn btn-primary" value="Clear" data-isNew="true" onclick="clearFilters(this)" />
    </div>
</div>
<input type="button" id="btnAddBilling" class="btn btn-primary common-btn" value="Add" data-isNew="true" onclick="AddOrEdit(this)" />
<table class="table table-responsive table-hover display" style="width:100%;" id="MyTable">
    <thead class="thead-dark">
        <tr>
            <th>Job Title</th>
            <th>Created By</th>
            @*<td>Created On</td>*@
            <th>Hours</th>
            <th>Amount</th>
            <th>Billing Date</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>
<script>
    $(document).ready(function () {
        $(".chosen").chosen({ no_results_text: "Oops, nothing found!" }).change(function () {
            _loadData();
        });


        //date pickers
        var isFirstTime = true;
        var startDate = new Date();
        var FromEndDate = new Date();

        $("#startDate").datepicker({
            autoclose: true,
            minViewMode: 0,
            //format: "dd/mm/yyyy"
            format: "yyyy-mm-dd"
        }).on('changeDate', function (selected) {
            startDate = new Date(selected.date.valueOf());
            startDate.setDate(startDate.getDate(new Date(selected.date.valueOf())));
            $('#endDate').datepicker('setStartDate', startDate);
            var edate = $('#endDate').val()
            if (edate == undefined || edate == "") {
                $("#endDate").addClass("error");
                $("#endDate").val("");
                return false;
            } else {
                $("#endDate").removeClass("error");
                _loadData();
                isFirstTime = false;
            }
        });
        //$("#startDate").val(untilHelper.GetCurrentDateMonthYearFormat);

        $("#endDate").datepicker({
            autoclose: true,
            minViewMode: 0,
            //format: 'dd/mm/yyyy'
            format: "yyyy-mm-dd"
        }).on('changeDate', function (selected) {
            var sdate = $('#startDate').val()
            if (sdate == undefined || sdate == "") {
                $("#startDate").addClass("error");
                $("#endDate").val("");
                return false;
            } else {
                $("#endDate").removeClass("error");
                $("#startDate").removeClass("error");
                FromEndDate = new Date(selected.date.valueOf());
                FromEndDate.setDate(FromEndDate.getDate(new Date(selected.date.valueOf())));
                $('#startDate').datepicker('setEndDate', FromEndDate);
                _loadData();
                isFirstTime = false;
            }
        });
        //$("#endDate").val(untilHelper.GetCurrentDateMonthYearFormat);

        loader();
        if (isFirstTime) {
            _loadData();
        }
        removeLoader();
    });
    var oTable;
    var _loadData = function (response) {
        if ($.fn.DataTable.isDataTable("#MyTable")) {
            oTable.draw();
        }
        else {

            oTable = $('#MyTable').DataTable({
                //"aaData":response,
                "bServerSide": true,
                "sAjaxSource": "/Billing/GetList",
                "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                    var colName = oSettings.aoColumns[oSettings.aaSorting[0][0]].mData;
                    var sDir = oSettings.aaSorting[0][1];
                    var sDate = $("#startDate").val();
                    var eDate = $("#endDate").val();
                    var clients = $(".chosen").val();

                    aoData.push({ "name": "sortCol", "value": colName });
                    aoData.push({ "name": "sortDir", "value": sDir });
                    aoData.push({ "name": "startDate", "value": sDate });
                    aoData.push({ "name": "endDate", "value": eDate });
                    aoData.push({ "name": "ids", "value": clients });

                    $.ajax({
                        type: "Get",
                        data: aoData,
                        url: sSource,
                        success: fnCallback
                    })
                },
                "aoColumns": [
                    { "mData": "JobTitle" },
                    { "mData": "CreatedByName" },
                    //{
                    //    "mData": "CreatedOn",
                    //    "render": function (row, type, full) {
                    //        var date = new Date(parseInt(full.CreatedOn.substr(6)));
                    //        var month = date.getMonth() + 1;
                    //        var formattedDate = date.getDate() + "/" + month + "/" + date.getFullYear();
                    //        return formattedDate;
                    //    }
                    //},
                    { "mData": "Hours" },
                    { "mData": "Amount" },
                    {
                        "mData": "BillingDate",
                        "render": function (row, type, full) {
                            var date = new Date(parseInt(full.BillingDate.substr(6)));
                            var month = date.getMonth() + 1;
                            var formattedDate = date.getDate() + "/" + month + "/" + date.getFullYear();
                            return formattedDate;
                        }
                    },
                    {
                        "mData": null,
                        "render": function (row, type, full) {
                            var buttons;
                            if (full.IsAdmin) {
                                buttons = "<a class='icon-style' href='#' id='' data-id='" + full.Id + "' onclick='return ViewDetail(this)'><i class='fa fa-info-circle' aria-hidden='true'></i></a>";
                                return "<a class='icon-style' href='#' id='' data-id='" + full.Id + "' onclick='return AddOrEdit(this)'> <i class='fa fa-pencil' aria-hidden='true'></i></a><a class='icon-style' href='#' id='' data-id='" + full.Id + "' onclick='return Delete(this)'><i class='fa fa-trash' aria-hidden='true'></i></a>" + buttons;
                            }
                            else {
                                buttons = "<a class='icon-style' href='#' id='' data-id='" + full.Id + "' onclick='return ViewDetail(this)'><i class='fa fa-info-circle' aria-hidden='true'></i></a>";
                                if (full.IsCurrentUser) {
                                    return "<a class='icon-style' href='#' id='' data-id='" + full.Id + "' onclick='return AddOrEdit(this)'> <i class='fa fa-pencil' aria-hidden='true'></i></a><a class='icon-style' href='#' id='' data-id='" + full.Id + "' onclick='return Delete(this)'><i class='fa fa-trash' aria-hidden='true'></i></a>" + buttons;
                                } else {
                                    return buttons;
                                }
                            }
                            return buttons;
                        },
                    },
                ],
                "aoColumnDefs": [
                    { "bSortable": false, "aTargets": [0, 5] }
                ],
                "order": [[4, "desc"]],
                bProcessing: true,
                pageLength: 10,
                "paging": true,
                bSearching: false,
                bLengthChange: false,
                "language": {
                    "zeroRecords": "Not found - Sorry",
                    "info": "Page _PAGE_ of _PAGES_",
                    "infoEmpty": "No records",
                    "processing": "Processing... Please wait",
                },
            });
        }
        removeLoader();
    };

    var clearFilters = function () {
        $("#startDate").val("");
        $("#endDate").val("");
        $(".chosen").val("").trigger('chosen:updated');
        _loadData();
    }

    var AddOrEdit = function (event) {
        var isNew = event.getAttribute("data-isNew");
        var Id = parseInt(event.getAttribute("data-Id"));
        if (Id == null || Id == undefined) {
            notificationHelper.ShowError("Some thing went wrong!");
        }
        else {
            loader();
            if (isNew) {
                Id = 0;
            }
            $.ajax({
                type: "Get",
                url: "/Billing/AddBilling",
                data: { id: Id },
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    if (response.Success) {
                        if (Id > 0) {
                            $('#myModal').find('#myModalLabel').html('Update Billing');
                        }
                        else {
                            $('#myModal').find('#myModalLabel').html('Add Billing');
                        }
                        $('#myModal').find('.modal-body').html(response.Html);
                        $('#myModal').find('.btn-primary').addClass('saveBid');
                        $('#myModal').modal('show');
                        removeLoader();
                    }
                    else {
                        notificationHelper.ShowError("Some thing went wrong !");
                        removeLoader();
                    }
                },
                error: function (result) {
                    notificationHelper.ShowError(result.Message);
                    removeLoader();
                }
            });
        }
    }
    var ViewDetail = function (event) {
        var Id = parseInt(event.getAttribute("data-Id"));
        if (Id == null || Id == undefined) {
            notificationHelper.ShowError("Some thing went wrong!");
        }
        else {
            loader();
            $.ajax({
                type: "Get",
                url: "/Billing/AddBilling",
                data: { id: Id, "viewType": "Display" },
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    if (response.Success) {
                        if (Id > 0) {
                            $('#myModal').find('#myModalLabel').html('Billing View Detail');
                        }
                        else {
                            $('#myModal').find('#myModalLabel').html('Billing View Detail');
                        }
                        $('#myModal').find('.modal-body').html(response.Html);
                        $('#myModal').find('.btn-primary').addClass('saveBid');
                        $('#myModal').modal('show');
                        removeLoader();
                    }
                    else {
                        notificationHelper.ShowError("Some thing went wrong !");
                        removeLoader();
                    }
                },
                error: function (result) {
                    notificationHelper.ShowError(result.Message);
                    removeLoader();
                }
            });
        }
    }
    var Delete = function (event) {
        var Id = parseInt(event.getAttribute("data-Id"));
        if (Id == null || Id == undefined) {
            notificationHelper.ShowError("Some thing went wrong!");
        }
        else {
            if (confirm("Are you sure?")) {
                loader();
                $.ajax({
                    type: "Get",
                    url: "/Billing/Delete",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: { Id: Id },
                    success: function (result) {
                        notificationHelper.ShowSuccess(result.Message);
                        setTimeout(function () {
                            location.href = "/Billing/Index";
                        }, 1000);
                    },
                    error: function (result) {
                        notificationHelper.ShowError('error');
                        removeLoader();
                    }
                });
            }
            return false;
        }
    }
</script>
